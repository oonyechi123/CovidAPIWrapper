if (statistics = "min") {
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function(stat) {
statistics = stat
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (statistics = "min") {
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function(stat) {
statistics = stat
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
}
Confirmed_Case_Statistics()
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function() {
statistics = stat
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
}
Confirmed_Case_Statistics()
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function() {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
}
Confirmed_Case_Statistics()
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function() {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
df
}
Confirmed_Case_Statistics()
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat = "min") {
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat = "minimum") {
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$NewConfirmed == min(df$NewConfirmed)), ]
}
if (stat == "maximum") {
result = df[which(df$NewConfirmed == max(df$NewConfirmed)), ]
}
result
}
Confirmed_Case_Statistics(minimum)
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == minimum) {
result = df[which(df$NewConfirmed == min(df$NewConfirmed)), ]
}
if (stat == maximum) {
result = df[which(df$NewConfirmed == max(df$NewConfirmed)), ]
}
result
}
Confirmed_Case_Statistics(minimum)
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$NewConfirmed == min(df$NewConfirmed)), ]
}
if (stat == "maximum") {
result = df[which(df$NewConfirmed == max(df$NewConfirmed)), ]
}
result
}
Confirmed_Case_Statistics("minimum")
#Call data from the worldwide Covid-19 case API.
Confirmed_Case_Statistics <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$NewConfirmed == min(df$NewConfirmed)), ]
}
if (stat == "maximum") {
result = df[which(df$NewConfirmed == max(df$NewConfirmed)), ]
}
result
}
Confirmed_Case_Statistics("maximum")
#Call data from the worldwide Covid-19 case API.
Total_Case_Country_Statistics <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$TotalConfirmed == min(df$TotalConfirmed)), ]
}
if (stat == "maximum") {
result = df[which(df$TotalConfirmed == max(df$TotalConfirmed)), ]
}
result
}
Total_Case_Country_Statistics("maximum")
#Call data from the worldwide Covid-19 case API.
Total_Case_Country_Statistics <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$TotalConfirmed == min(df$TotalConfirmed)), ]
}
if (stat == "maximum") {
result = df[which(df$TotalConfirmed == max(df$TotalConfirmed)), ]
}
result
}
Total_Case_Country_Statistics("minimum")
#Call data from the worldwide Covid-19 case API.
New_Deaths_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$NewDeaths == min(df$NewDeaths)), ]
}
if (stat == "maximum") {
result = df[which(df$NewDeaths == max(df$NewDeaths)), ]
}
result
}
Total_Case_Country_Statistics("minimum")
#Call data from the worldwide Covid-19 case API.
New_Deaths_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$NewDeaths == min(df$NewDeaths)), ]
}
if (stat == "maximum") {
result = df[which(df$NewDeaths == max(df$NewDeaths)), ]
}
result
}
Total_Case_Country_Statistics("maximum")
#Call data from the worldwide Covid-19 case API.
Total_Deaths_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$TotalDeaths == min(df$TotalDeaths)), ]
}
if (stat == "maximum") {
result = df[which(df$TotalDeaths == max(df$TotalDeaths)), ]
}
result
}
Total_Case_Country_Statistics("maximum")
#Call data from the worldwide Covid-19 case API.
Total_Deaths_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$TotalDeaths == min(df$TotalDeaths)), ]
}
if (stat == "maximum") {
result = df[which(df$TotalDeaths == max(df$TotalDeaths)), ]
}
result
}
Total_Case_Country_Statistics("minimum")
#Call data from the worldwide Covid-19 case API.
New_Recoveries_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$NewRecovered == min(df$NewRecovered)), ]
}
if (stat == "maximum") {
result = df[which(df$NewRecovered == max(df$NewRecovered)), ]
}
result
}
Total_Case_Country_Statistics("minimum")
#Call data from the worldwide Covid-19 case API.
New_Recoveries_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$NewRecovered == min(df$NewRecovered)), ]
}
if (stat == "maximum") {
result = df[which(df$NewRecovered == max(df$NewRecovered)), ]
}
result
}
Total_Case_Country_Statistics("maximum")
#Call data from the worldwide Covid-19 case API.
New_Recoveries_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$TotalRecovered == min(df$TotalRecovered)), ]
}
if (stat == "maximum") {
result = df[which(df$TotalRecovered == max(df$TotalRecovered)), ]
}
result
}
Total_Case_Country_Statistics("maximum")
#Call data from the worldwide Covid-19 case API.
New_Recoveries_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$TotalRecovered == min(df$TotalRecovered)), ]
}
if (stat == "maximum") {
result = df[which(df$TotalRecovered == max(df$TotalRecovered)), ]
}
result
}
Total_Case_Country_Statistics("minimum")
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
result = df[which(df$CountryCode == country), ]
result
}
Country_Search("US")
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
result = df[which(df$CountryCode == country), ]
result
}
Country_Search("NG")
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered,
DeathRate = info$TotalDeaths/info$TotalConfirmed)
result = df[which(df$CountryCode == country), ]
result
}
Country_Search()
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
DeathRate = info$TotalDeaths/info$TotalConfirmed)
result = df[which(df$CountryCode == country), ]
result
}
Country_Search()
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
DeathRate = cat((info$TotalDeaths/info$TotalConfirmed)*100),"%")
result = df[which(df$CountryCode == country), ]
result
}
Country_Search()
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
DeathRate = (info$TotalDeaths/info$TotalConfirmed)*100))
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
DeathRate = (info$TotalDeaths/info$TotalConfirmed)*100)
result = df[which(df$CountryCode == country), ]
result
}
Country_Search()
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
DeathRatePercent = (info$TotalDeaths/info$TotalConfirmed)*100)
result = df[which(df$CountryCode == country), ]
result
}
Country_Search()
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
DeathRatePercent = (info$TotalDeaths/info$TotalConfirmed)*100)
result = df[which(df$CountryCode == country), ]
result
}
Country_Search("US")
#Call data from the worldwide Covid-19 case API.
Country_Search <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
DeathRatePercent = (info$TotalDeaths/info$TotalConfirmed)*100)
result = df[which(df$CountryCode == country), ]
result
}
Country_Search("NG")
#Call data from the worldwide Covid-19 case API.
Death_Rate <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
DeathRatePercent = (info$TotalDeaths/info$TotalConfirmed)*100)
result = df[which(df$CountryCode == country), ]
result
}
Death_Rate(country=c("NG","US"))
#Call data from the worldwide Covid-19 case API.
Recovery_Rate <- function(country = df$CountryCode) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
RecoveryRatePercent = (info$TotalRecovered/info$TotalConfirmed)*100)
result = df[which(df$CountryCode == country), ]
result
}
Recovery_Rate("NG")
New_Case_Country_Stats <- function(stat) {
CovidURL = paste("https://api.covid19api.com/summary")
Covidquery = jsonlite::fromJSON(CovidURL)
info = Covidquery$Countries
df = data.frame(Country = info$Country, CountryCode = info$CountryCode,
NewConfirmed = info$NewConfirmed, TotalConfirmed = info$TotalConfirmed,
NewDeaths = info$NewDeaths, TotalDeaths = info$TotalDeaths,
NewRecovered = info$NewRecovered, TotalRecovered = info$TotalRecovered)
if (stat == "minimum") {
result = df[which(df$NewConfirmed == min(df$NewConfirmed)), ]
}
if (stat == "maximum") {
result = df[which(df$NewConfirmed == max(df$NewConfirmed)), ]
}
if (stat == "average") {
result = mean(df$NewConfirmed)
}
if (stat == "sum") {
result = sum(df$NewConfirmed)
}
result
}
New_Case_Country_Stats("average")
New_Case_Country_Stats("sum")
?Death_Rate
Death_Rate()
devtools::document()
library(devtools)
devtools::document()
library(devtools)
library(devtools)
devtools::document()
install.packages("devtools")
library(devtools)
devtools::document()
?Death_Rate
devtools::document()
?Death_Rate
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?hist
devtools::document()
Country_Search("US")
